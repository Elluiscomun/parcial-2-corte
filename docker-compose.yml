services:

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"  # Dashboard solo accesible localmente
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.http.routers.traefik.rule=Host(`localhost`) && PathPrefix(`/dashboard`)"
      - "traefik.http.routers.traefik.service=api@internal"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-parcial
    restart: unless-stopped
    #networks:
      #- backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=PathPrefix(`/monitor`)"
      - "traefik.http.routers.rabbitmq.service=rabbitmq"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"

      - "traefik.http.middlewares.monitor-stripprefix.stripPrefix.prefixes=/monitor"
      - "traefik.http.routers.rabbitmq.middlewares=monitor-stripprefix"

    ports:
      - "15672:15672"  # Puerto de gestión de RabbitMQ
      - "5672:5672"    # Puerto de mensajería de RabbitMQ
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  api:
    build: ./api
    container_name: api-parcial
    restart: unless-stopped
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_QUEUE=messages
    #networks:
      #- backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.api.service=api"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
    depends_on:
      - rabbitmq
    volumes:
      - api-logs:/var/log/api
  
  worker:
    build: ./worker
    container_name: worker-parcial
    restart: unless-stopped
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_QUEUE=messages
    #networks:
      #- backend
    depends_on:
      - rabbitmq
    volumes:
      - worker-data:/app/data

volumes:
  rabbitmq-data:
  api-logs:
  worker-data: